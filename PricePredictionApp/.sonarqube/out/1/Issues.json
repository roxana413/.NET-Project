{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.0.0.0",
        "fileVersion": "4.0.0-6.21526.21 (c7d6f9fa)",
        "semanticVersion": "4.0.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S3925",
          "level": "warning",
          "message": "Update this implementation of 'ISerializable' to conform to the recommended serialization pattern.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Exceptions/EntityNotFoundException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 41
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Exceptions/EntityNotFoundException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 12,
                  "endLine": 3,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Exceptions/EntityNotFoundException.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 12,
                  "endLine": 3,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Add 'System.SerializableAttribute' attribute on 'EntityNotFoundException' because it implements 'ISerializable'.",
              "1": "Add a 'protected' constructor 'EntityNotFoundException(SerializationInfo, StreamingContext)'."
            }
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'UserDTO' to match pascal case naming rules, consider using 'UserDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/DTO/UserDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'HouseDTO' to match pascal case naming rules, consider using 'HouseDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/DTO/HouseDTO.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Authentication/RegisterCommandHandler.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 80,
                  "endLine": 15,
                  "endColumn": 86
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Authentication/RegisterCommandHandler.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 23,
                  "endLine": 19,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Authentication/LoginCommandHandler.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 99,
                  "endLine": 16,
                  "endColumn": 105
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Authentication/LoginCommandHandler.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Users/Queries/GetUserByNameHandler.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 36,
                  "endLine": 15,
                  "endColumn": 42
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Users/Queries/GetUserByNameHandler.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 22,
                  "endLine": 19,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Commands/UpdateHouseCommandHandler.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Commands/UpdateHouseCommandHandler.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 23,
                  "endLine": 21,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Commands/CreateHouseCommandHandler.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 33,
                  "endLine": 15,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Commands/CreateHouseCommandHandler.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 23,
                  "endLine": 19,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/UserHistory/Queries/GetUserHistoryQueryHandler.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 50,
                  "endLine": 18,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/UserHistory/Queries/GetUserHistoryQueryHandler.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 23,
                  "endLine": 22,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/PricePrediction/PredictHouseCommandHandler.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 37,
                  "endLine": 21,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/PricePrediction/PredictHouseCommandHandler.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 23,
                  "endLine": 25,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'updateProperty' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/rbulb/source/repos/roxana413/.NET-Project/PricePredictionApp/Application/Features/Commands/UpdateHouseCommandHandler.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 22,
                  "endLine": 36,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3925": {
          "id": "S3925",
          "shortDescription": "\"ISerializable\" should be implemented correctly",
          "fullDescription": "The ISerializable interface is the mechanism to control the type serialization process. If not implemented correctly this could result in an invalid serialization and hard to detect bugs.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3925",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        },
        "S4457": {
          "id": "S4457",
          "shortDescription": "Parameter validation in \"async\"/\"await\" methods should be wrapped",
          "fullDescription": "Because of the way async/await methods are rewritten by the compiler, any exceptions thrown during the parameters check will happen only when the task is observed. That could happen far away from the source of the buggy code or never happen for fire-and-forget tasks.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4457",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}