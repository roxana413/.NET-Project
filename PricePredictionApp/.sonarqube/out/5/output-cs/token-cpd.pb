Ô
jC:\Users\rbulb\source\repos\roxana413\.NET-Project\PricePredictionApp\WebAPI\Controllers\BaseController.cs
	namespace 	
WebAPI
 
. 
Controllers 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 2
)2 3
]3 4
public 

class 
BaseController 
:  !
ControllerBase" 0
{		 
	protected

 
	IMediator

 
mediator

 $
;

$ %
public 
BaseController 
( 
	IMediator '
mediator( 0
)0 1
{ 	
this 
. 
mediator 
= 
mediator $
;$ %
} 	
} 
} ð
wC:\Users\rbulb\source\repos\roxana413\.NET-Project\PricePredictionApp\WebAPI\Controllers\v1\AuthenticationController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[		 
ApiController		 
]		 
[

 

ApiVersion

 
(

 
$str

 
)

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class $
AuthenticationController )
:* +
BaseController, :
{ 
public $
AuthenticationController '
(' (
	IMediator( 1
mediator2 :
): ;
:< =
base> B
(B C
mediatorC K
)K L
{ 	
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
[ 	 
ProducesResponseType	 
( 
StatusCodes )
.) *
Status200OK* 5
)5 6
]6 7
[ 	 
ProducesResponseType	 
( 
typeof $
($ %
string% +
)+ ,
,, -
StatusCodes. 9
.9 :
Status400BadRequest: M
)M N
]N O
public 
async 
Task 
< 
IActionResult '
>' (
Register) 1
(1 2
[2 3
FromBody3 ;
]; <
RegisterCommand= L
commandM T
)T U
{ 	
var 
result 
= 
await 
mediator '
.' (
Send( ,
(, -
command- 4
)4 5
;5 6
if 
( 
result 
. 
Status 
==   
AuthenticationStatus! 5
.5 6
SUCCESS6 =
)= >
{ 
return 
Ok 
( 
) 
; 
} 
return 

BadRequest 
( 
result $
.$ %
ErrorMessage% 1
)1 2
;2 3
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
[   	 
ProducesResponseType  	 
(   
typeof   $
(  $ %

LoginToken  % /
)  / 0
,  0 1
StatusCodes  2 =
.  = >
Status200OK  > I
)  I J
]  J K
[!! 	 
ProducesResponseType!!	 
(!! 
typeof!! $
(!!$ %
string!!% +
)!!+ ,
,!!, -
StatusCodes!!. 9
.!!9 :!
Status401Unauthorized!!: O
)!!O P
]!!P Q
public"" 
async"" 
Task"" 
<"" 
IActionResult"" '
>""' (
Login"") .
("". /
[""/ 0
FromBody""0 8
]""8 9
LoginCommand"": F
command""G N
)""N O
{## 	
var$$ 
result$$ 
=$$ 
await$$ 
mediator$$ '
.$$' (
Send$$( ,
($$, -
command$$- 4
)$$4 5
;$$5 6
if%% 
(%% 
result%% 
.%% 
Status%% 
==%%   
AuthenticationStatus%%! 5
.%%5 6
SUCCESS%%6 =
)%%= >
{&& 
return'' 
Ok'' 
('' 
result''  
.''  !
Token''! &
)''& '
;''' (
}(( 
return)) 
Unauthorized)) 
())  
result))  &
.))& '
ErrorMessage))' 3
)))3 4
;))4 5
}** 	
}++ 
},, èU
oC:\Users\rbulb\source\repos\roxana413\.NET-Project\PricePredictionApp\WebAPI\Controllers\v1\HousesController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
HousesController !
:" #
BaseController$ 2
{ 
public 
HousesController 
(  
	IMediator  )
mediator* 2
)2 3
:4 5
base6 :
(: ;
mediator; C
)C D
{ 	
} 	
[ 	
HttpPost	 
] 
[ 	 
ProducesResponseType	 
( 
typeof $
($ %
Guid% )
)) *
,* +
StatusCodes, 7
.7 8
Status201Created8 H
)H I
]I J
public 
async 
Task 
< 
IActionResult '
>' (
Create) /
(/ 0
[0 1
FromBody1 9
]9 :
CreateHouseCommand; M
commandN U
)U V
{ 	
return 
new 
ObjectResult #
(# $
await$ )
mediator* 2
.2 3
Send3 7
(7 8
command8 ?
)? @
)@ A
{B C

StatusCodeD N
=O P
StatusCodesQ \
.\ ]
Status201Created] m
}n o
;o p
} 	
[ 	
HttpGet	 
] 
[ 	 
ProducesResponseType	 
( 
typeof $
($ %
IEnumerable% 0
<0 1
HouseDTO1 9
>9 :
): ;
,; <
StatusCodes= H
.H I
Status200OKI T
)T U
]U V
public   
async   
Task   
<   
IActionResult   '
>  ' (
Get  ) ,
(  , -
[  - .
	FromQuery  . 7
]  7 8
int  9 <
	pageIndex  = F
,  F G
[  H I
	FromQuery  I R
]  R S
int  T W
pageSize  X `
)  ` a
{!! 	
return"" 
Ok"" 
("" 
await"" 
mediator"" $
.""$ %
Send""% )
("") *
new""* -
GetHousesQuery"". <
(""< =
)""= >
{""? @
	PageIndex""A J
=""K L
	pageIndex""M V
,""V W
PageSize""X `
=""a b
pageSize""c k
}""l m
)""m n
)""n o
;""o p
}## 	
[%% 	
HttpGet%%	 
(%% 
$str%% 
)%% 
]%% 
[&& 	 
ProducesResponseType&&	 
(&& 
StatusCodes&& )
.&&) *
Status404NotFound&&* ;
)&&; <
]&&< =
['' 	 
ProducesResponseType''	 
('' 
typeof'' $
(''$ %
House''% *
)''* +
,''+ ,
StatusCodes''- 8
.''8 9
Status200OK''9 D
)''D E
]''E F
public(( 
async(( 
Task(( 
<(( 
IActionResult(( '
>((' (
GetById(() 0
(((0 1
[((1 2
	FromRoute((2 ;
]((; <
Guid((= A
Id((B D
)((D E
{)) 	
try** 
{++ 
return,, 
Ok,, 
(,, 
await,, 
mediator,,  (
.,,( )
Send,,) -
(,,- .
new,,. 1
GetHouseByIdQuery,,2 C
{,,D E
Id,,F H
=,,I J
Id,,K M
},,M N
),,N O
),,O P
;,,P Q
}-- 
catch.. 
(.. #
EntityNotFoundException.. *
ex..+ -
)..- .
{// 
return00 
NotFound00 
(00  
ex00  "
.00" #
Message00# *
)00* +
;00+ ,
}11 
}22 	
[44 	
	Authorize44	 
]44 
[55 	
HttpGet55	 
(55 
$str55 
)55 
]55 
[66 	 
ProducesResponseType66	 
(66 
typeof66 $
(66$ %
string66% +
)66+ ,
,66, -
StatusCodes66. 9
.669 :(
Status500InternalServerError66: V
)66V W
]66W X
[77 	 
ProducesResponseType77	 
(77 
typeof77 $
(77$ %
IEnumerable77% 0
<770 1
HouseDTO771 9
>779 :
)77: ;
,77; <
StatusCodes77= H
.77H I
Status200OK77I T
)77T U
]77U V
public88 
async88 
Task88 
<88 
IActionResult88 '
>88' (

GetHistory88) 3
(883 4
)884 5
{99 	
try:: 
{;; 
return<< 
Ok<< 
(<< 
await<< 
mediator<<  (
.<<( )
Send<<) -
(<<- .
new<<. 1
GetUserHistoryQuery<<2 E
(<<E F
)<<F G
{== 
UserName>> 
=>> 
HttpContext>> *
.>>* +
User>>+ /
.>>/ 0
Identity>>0 8
.>>8 9
Name>>9 =
}?? 
)?? 
)?? 
;?? 
}@@ 
catchAA 
(AA #
EntityNotFoundExceptionAA *
exAA+ -
)AA- .
{BB 
returnCC 
newCC 
ObjectResultCC '
(CC' (
exCC( *
.CC* +
MessageCC+ 2
)CC2 3
{CC4 5

StatusCodeCC6 @
=CCA B
StatusCodesCCC N
.CCN O(
Status500InternalServerErrorCCO k
}CCl m
;CCm n
}DD 
}FF 	
[HH 	
	AuthorizeHH	 
]HH 
[II 	
HttpPostII	 
(II 
$strII 
)II 
]II 
[JJ 	 
ProducesResponseTypeJJ	 
(JJ 
typeofJJ $
(JJ$ %
stringJJ% +
)JJ+ ,
,JJ, -
StatusCodesJJ. 9
.JJ9 :(
Status500InternalServerErrorJJ: V
)JJV W
]JJW X
[KK 	 
ProducesResponseTypeKK	 
(KK 
typeofKK $
(KK$ %
HouseDTOKK% -
)KK- .
,KK. /
StatusCodesKK0 ;
.KK; <
Status200OKKK< G
)KKG H
]KKH I
publicLL 
asyncLL 
TaskLL 
<LL 
IActionResultLL '
>LL' (
PredictLL) 0
(LL0 1
[LL1 2
FromBodyLL2 :
]LL: ;
HouseDTOLL< D
	houseFormLLE N
)LLN O
{MM 	
tryNN 
{OO 
returnPP 
OkPP 
(PP 
awaitPP 
mediatorPP  (
.PP( )
SendPP) -
(PP- .
newPP. 1
PredictHouseCommandPP2 E
(PPE F
)PPF G
{QQ 
UserNameRR 
=RR 
HttpContextRR *
.RR* +
UserRR+ /
.RR/ 0
IdentityRR0 8
.RR8 9
NameRR9 =
,RR= >
	HouseFormSS 
=SS 
	houseFormSS  )
}TT 
)TT 
)TT 
;TT 
}UU 
catchVV 
(VV #
EntityNotFoundExceptionVV *
exVV+ -
)VV- .
{WW 
returnXX 
newXX 
ObjectResultXX '
(XX' (
exXX( *
.XX* +
MessageXX+ 2
)XX2 3
{XX4 5

StatusCodeXX6 @
=XXA B
StatusCodesXXC N
.XXN O(
Status500InternalServerErrorXXO k
}XXl m
;XXm n
}YY 
}[[ 	
[]] 	
HttpPut]]	 
]]] 
[^^ 	 
ProducesResponseType^^	 
(^^ 
typeof^^ $
(^^$ %
Guid^^% )
)^^) *
,^^* +
StatusCodes^^, 7
.^^7 8
Status200OK^^8 C
)^^C D
]^^D E
[__ 	 
ProducesResponseType__	 
(__ 
StatusCodes__ )
.__) *
Status404NotFound__* ;
)__; <
]__< =
public`` 
async`` 
Task`` 
<`` 
IActionResult`` '
>``' (
Update``) /
(``/ 0
[``0 1
FromBody``1 9
]``9 :
UpdateHouseCommand``; M
command``N U
)``U V
{aa 	
trybb 
{cc 
returndd 
Okdd 
(dd 
awaitdd 
mediatordd  (
.dd( )
Senddd) -
(dd- .
commanddd. 5
)dd5 6
)dd6 7
;dd7 8
}ee 
catchff 
(ff #
EntityNotFoundExceptionff *
exff+ -
)ff- .
{gg 
returnhh 
NotFoundhh 
(hh  
exhh  "
.hh" #
Messagehh# *
)hh* +
;hh+ ,
}ii 
}jj 	
[ll 	

HttpDeletell	 
(ll 
$strll 
)ll 
]ll 
[mm 	 
ProducesResponseTypemm	 
(mm 
typeofmm $
(mm$ %
Guidmm% )
)mm) *
,mm* +
StatusCodesmm, 7
.mm7 8
Status200OKmm8 C
)mmC D
]mmD E
[nn 	 
ProducesResponseTypenn	 
(nn 
StatusCodesnn )
.nn) *
Status404NotFoundnn* ;
)nn; <
]nn< =
publicoo 
asyncoo 
Taskoo 
<oo 
IActionResultoo '
>oo' (
Deleteoo) /
(oo/ 0
[oo0 1
	FromRouteoo1 :
]oo: ;
Guidoo< @
IdooA C
)ooC D
{pp 	
tryqq 
{rr 
returnss 
Okss 
(ss 
awaitss 
mediatorss  (
.ss( )
Sendss) -
(ss- .
newss. 1
DeleteHouseCommandss2 D
{ssE F
IdssG I
=ssJ K
IdssL N
}ssO P
)ssP Q
)ssQ R
;ssR S
}tt 
catchuu 
(uu #
EntityNotFoundExceptionuu *
exuu+ -
)uu- .
{vv 
returnww 
NotFoundww 
(ww  
exww  "
.ww" #
Messageww# *
)ww* +
;ww+ ,
}xx 
}yy 	
}|| 
}}} 
xC:\Users\rbulb\source\repos\roxana413\.NET-Project\PricePredictionApp\WebAPI\Controllers\v1\PricePredictionController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[ 
ApiController 
] 
[ 

ApiVersion 
( 
$str 
) 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 %
PricePredictionController		 *
:		+ ,
BaseController		- ;
{

 
public %
PricePredictionController (
(( )
	IMediator) 2
mediator3 ;
); <
:= >
base? C
(C D
mediatorD L
)L M
{ 	
} 	
} 
} 
nC:\Users\rbulb\source\repos\roxana413\.NET-Project\PricePredictionApp\WebAPI\Controllers\v1\UsersController.cs
	namespace 	
WebAPI
 
. 
Controllers 
. 
v1 
{ 
[ 
ApiController 
] 
[		 

ApiVersion		 
(		 
$str		 
)		 
]		 
[

 
Route

 

(


 
$str

 
)

 
]

 
public 

class 
UsersController  
:! "
BaseController# 1
{ 
public 
UsersController 
( 
	IMediator (
mediator) 1
)1 2
:3 4
base5 9
(9 :
mediator: B
)B C
{ 	
} 	
[ 	
	Authorize	 
( 
Roles 
= 
$str "
)" #
]# $
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetUsers) 1
(1 2
)2 3
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
new* -
GetUsersQuery. ;
(; <
)< =
)= >
)> ?
;? @
} 	
[ 	
	Authorize	 
] 
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetCurrentUser) 7
(7 8
)8 9
{ 	
return 
Ok 
( 
await 
mediator $
.$ %
Send% )
() *
new* -
GetUserByName. ;
(; <
)< =
{ 
UserName 
= 
HttpContext &
.& '
User' +
.+ ,
Identity, 4
.4 5
Name5 9
} 
) 
) 
; 
}   	
}!! 
}"" "
WC:\Users\rbulb\source\repos\roxana413\.NET-Project\PricePredictionApp\WebAPI\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder		 
.		 
Services		 
.		 
AddControllers		 
(		  
)		  !
;		! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
c  
=>! #
{ 
c 
. !
AddSecurityDefinition 
( 
$str $
,$ %
new& )!
OpenApiSecurityScheme* ?
(? @
)@ A
{ 
Name 
= 
$str 
, 
Type 
= 
SecuritySchemeType !
.! "
ApiKey" (
,( )
Scheme 
= 
$str 
, 
BearerFormat 
= 
$str 
, 
In 

= 
ParameterLocation 
. 
Header %
,% &
Description 
= 
$str	 ¡
,
¡ ¢
} 
) 
; 
c 
. "
AddSecurityRequirement 
( 
new  &
OpenApiSecurityRequirement! ;
{ 
{ 
new !
OpenApiSecurityScheme 3
{ 
	Reference  )
=* +
new, /
OpenApiReference0 @
{  !
Type$ (
=) *
ReferenceType+ 8
.8 9
SecurityScheme9 G
,G H
Id$ &
=' (
$str) 1
}    !
}!! 
,!! 
new"" 
string""  &
[""& '
]""' (
{"") *
}""* +
}## 
}$$ 
)$$ 
;$$ 
}%% 
)%% 
;%% 
builder&& 
.&& 
Services&& 
.&& 
AddPersistence&& 
(&&  
builder&&  '
.&&' (
Configuration&&( 5
)&&5 6
;&&6 7
builder'' 
.'' 
Services'' 
.'' 
AddApplication'' 
(''  
)''  !
;''! "
var)) 
app)) 
=)) 	
builder))
 
.)) 
Build)) 
()) 
))) 
;)) 
if,, 
(,, 
app,, 
.,, 
Environment,, 
.,, 
IsDevelopment,, !
(,,! "
),," #
),,# $
{-- 
app.. 
... 

UseSwagger.. 
(.. 
).. 
;.. 
app// 
.// 
UseSwaggerUI// 
(// 
)// 
;// 
}00 
using22 
(22 
var22 

scope22 
=22 
app22 
.22 
Services22 
.22  
CreateScope22  +
(22+ ,
)22, -
)22- .
{33 
PersistenceDI44 
.44 
CreateRoles44 
(44 
scope44 #
.44# $
ServiceProvider44$ 3
)443 4
.444 5
Wait445 9
(449 :
)44: ;
;44; <
PersistenceDI55 
.55 
SeedDatabase55 
(55 
scope55 $
.55$ %
ServiceProvider55% 4
)554 5
.555 6
Wait556 :
(55: ;
)55; <
;55< =
}77 
app99 
.99 
UseHttpsRedirection99 
(99 
)99 
;99 
app;; 
.;; 
UseAuthentication;; 
(;; 
);; 
;;; 
app<< 
.<< 
UseAuthorization<< 
(<< 
)<< 
;<< 
app>> 
.>> 
MapControllers>> 
(>> 
)>> 
;>> 
appAA 
.AA 
RunAA 
(AA 
)AA 	
;AA	 
